# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '../guiPages/settingsPopUp.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from main import perfectPitch
import numpy as np

class Ui_SettingsPopUp(object):
    def setupUi(self, SettingsPopUp):
        SettingsPopUp.setObjectName("SettingsPopUp")
        SettingsPopUp.resize(360, 340)
        SettingsPopUp.setMinimumSize(QtCore.QSize(0, 0))
        SettingsPopUp.setMaximumSize(QtCore.QSize(500, 600))
        SettingsPopUp.setStyleSheet("background-color: rgb(196, 236, 236);")
        self.settings_frame = QtWidgets.QFrame(SettingsPopUp)
        self.settings_frame.setGeometry(QtCore.QRect(0, 0, 360, 340))
        self.settings_frame.setMaximumSize(QtCore.QSize(500, 600))
        self.settings_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.settings_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.settings_frame.setObjectName("settings_frame")
        self.minfreq_slider = QtWidgets.QSlider(self.settings_frame)
        self.minfreq_slider.setGeometry(QtCore.QRect(200, 180, 150, 30))
        self.minfreq_slider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.minfreq_slider.setOrientation(QtCore.Qt.Horizontal)
        self.minfreq_slider.setObjectName("minfreq_slider")
        self.minfreq_slider.setMinimum(self.toLogScale(40))
        self.minfreq_slider.setMaximum(self.toLogScale(10000))
        self.minfreq_slider.setTickInterval(1)
        

        self.maxfreq_slider = QtWidgets.QSlider(self.settings_frame)
        self.maxfreq_slider.setGeometry(QtCore.QRect(200, 240, 150, 30))
        self.maxfreq_slider.setOrientation(QtCore.Qt.Horizontal)
        self.maxfreq_slider.setObjectName("maxfreq_slider")
        self.maxfreq_slider.setMinimum(self.toLogScale(40))
        self.maxfreq_slider.setMaximum(self.toLogScale(10000))
        self.maxfreq_slider.setTickInterval(1)

        self.saveButton = QtWidgets.QPushButton(self.settings_frame, clicked=lambda: self.saveButtonClicked(SettingsPopUp))
        self.saveButton.setGeometry(QtCore.QRect(35, 290, 100, 32))
        self.saveButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: black;\n"
"font: 13pt \"Arial\";\n"
"border-color: rgb(38, 73, 89);")
        self.saveButton.setObjectName("saveButton")
        self.cancelButton = QtWidgets.QPushButton(self.settings_frame, clicked=lambda: self.cancelButtonClicked(SettingsPopUp))
        self.cancelButton.setGeometry(QtCore.QRect(220, 290, 100, 32))
        self.cancelButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(38, 73, 89);\n"
"color: black;\n"
"font: 13pt \"Arial\";")
        self.cancelButton.setObjectName("cancelButton")
        self.label_4 = QtWidgets.QLabel(self.settings_frame)
        self.label_4.setGeometry(QtCore.QRect(20, 60, 150, 30))
        self.label_4.setStyleSheet("font: 13pt \"Arial\";\n"
"background-color: rgb(38, 73, 89);\n"
"border-color: rgb(38, 72, 89);\n"
"color: white;\n"
"")
        self.label_4.setFrameShape(QtWidgets.QFrame.Box)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.settings_frame)
        self.label_5.setGeometry(QtCore.QRect(20, 20, 141, 21))
        self.label_5.setStyleSheet("color: black;\n"
"font: 18pt \"Arial\";")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.settings_frame)
        self.label_6.setGeometry(QtCore.QRect(20, 240, 150, 30))
        self.label_6.setStyleSheet("font: 13pt \"Arial\";\n"
"background-color: rgb(38, 73, 89);\n"
"border-color: rgb(38, 72, 89);\n"
"color: white;\n"
"")
        self.label_6.setFrameShape(QtWidgets.QFrame.Box)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.settings_frame)
        self.label_7.setGeometry(QtCore.QRect(20, 120, 150, 30))
        self.label_7.setStyleSheet("font: 13pt \"Arial\";\n"
"background-color: rgb(38, 73, 89);\n"
"border-color: rgb(38, 72, 89);\n"
"color: white;\n"
"")
        self.label_7.setFrameShape(QtWidgets.QFrame.Box)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.settings_frame)
        self.label_8.setGeometry(QtCore.QRect(20, 180, 150, 30))
        self.label_8.setStyleSheet("font: 13pt \"Arial\";\n"
"background-color: rgb(38, 73, 89);\n"
"border-color: rgb(38, 72, 89);\n"
"color: white;\n"
"")
        self.label_8.setFrameShape(QtWidgets.QFrame.Box)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.sampleFreqText = QtWidgets.QTextEdit(self.settings_frame)
        self.sampleFreqText.setGeometry(QtCore.QRect(200, 60, 150, 30))
        self.sampleFreqText.setObjectName("sampleFreqText")
        self.windowSizeText = QtWidgets.QTextEdit(self.settings_frame)
        self.windowSizeText.setGeometry(QtCore.QRect(200, 120, 150, 30))
        self.windowSizeText.setObjectName("windowSizeText")

        self.retranslateUi(SettingsPopUp)
        QtCore.QMetaObject.connectSlotsByName(SettingsPopUp)

    def retranslateUi(self, SettingsPopUp):
        _translate = QtCore.QCoreApplication.translate
        SettingsPopUp.setWindowTitle(_translate("SettingsPopUp", "SettingsPopUp"))
        self.saveButton.setText(_translate("SettingsPopUp", "Save"))
        self.cancelButton.setText(_translate("SettingsPopUp", "Cancel"))
        self.label_4.setText(_translate("SettingsPopUp", "Sample Frequency"))
        self.label_5.setText(_translate("SettingsPopUp", "Settings"))
        self.label_6.setText(_translate("SettingsPopUp", "Max. Frequency"))
        self.label_7.setText(_translate("SettingsPopUp", "Window Size"))
        self.label_8.setText(_translate("SettingsPopUp", "Min. Frequency"))
        self.sampleFreqText.setHtml(_translate("SettingsPopUp", str(perfectPitch.processingManager.getSampleFrequency())+ " Hz"))
        self.windowSizeText.setHtml(_translate("SettingsPopUp", str(perfectPitch.processingManager.getWindowSize())+ " s"))
        self.minfreq_slider.setValue(self.toLogScale(perfectPitch.processingManager.getMinF0()))
        self.maxfreq_slider.setValue(self.toLogScale(perfectPitch.processingManager.getMaxF0()))

    def toLogScale(self, value):
            # converts values octave scale
            # As Qslice only accepts int, it multiplies by 100 to store 2 decimal places
            return int(np.floor(np.log2(value)*100))
        
    def fromLogScale(self, value):
            # converts values octave scale
            # As Qslice only accepts int, it divide by 100 to get 2 decimal places
            return int(np.floor(2**(value/100)))

    def saveButtonClicked(self, SettingsPopUp):
            perfectPitch.processingManager.setSampleFrequency(float(self.sampleFreqText.toPlainText().replace(' Hz', '')))
            perfectPitch.processingManager.setWindowSize(float(self.windowSizeText.toPlainText().replace(' s', '')))
            perfectPitch.processingManager.setMinF0(self.fromLogScale(self.minfreq_slider.value()))
            perfectPitch.processingManager.setMaxF0(self.fromLogScale(self.maxfreq_slider.value()))
            SettingsPopUp.close()
        
    def cancelButtonClicked(self, SettingsPopUp):
            SettingsPopUp.close()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SettingsPopUp = QtWidgets.QWidget()
    ui = Ui_SettingsPopUp()
    ui.setupUi(SettingsPopUp)
    SettingsPopUp.show()
    sys.exit(app.exec_())
